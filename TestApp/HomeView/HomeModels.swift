//
//  HomeModels.swift
//  TestApp
//
//  Created by Rohit Kalyankar on 20/07/23.
//  Copyright (c) 2023 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

enum Home
{
  // MARK: Use cases
  
    class ViewModel: WSResponseData {
        
        var home_id: String?
        var message_id : String?
        var home_message : String?
        var name: String?
        var sender_profile_image: String?
        var dateLabel : String?
        
        enum CodingKeys: String, CodingKey {
            
            case home_id
            case message_id
            case home_message
            case name
            case dateLabel
        }
        
        required init(from decoder: Decoder) throws {
            try super.init(from: decoder)
            let values = try decoder.container(keyedBy: CodingKeys.self)
            home_id = try values.decodeIfPresent(String.self, forKey: .home_id)
            message_id = try values.decodeIfPresent(String.self, forKey: .message_id)
            home_message = try values.decodeIfPresent(String.self, forKey: .home_message)
            name = try values.decodeIfPresent(String.self, forKey: .name)
            dateLabel = try values.decodeIfPresent(String.self, forKey: .dateLabel)

        }
        /// Default encode method
        ///
        /// - Parameter encoder: Encoder
        /// - Throws:throws exception if found error
        public override func encode(to encoder: Encoder) throws {
            try super.encode(to: encoder)
            var container = encoder.container(keyedBy: CodingKeys.self)
            try container.encode(home_id, forKey: .home_id )
            try container.encode(message_id, forKey: .message_id)
            try container.encode(home_message, forKey: .home_message)
            try container.encode(name, forKey: .name)
            try container.encode(dateLabel, forKey: .dateLabel)

        }
    }
}
